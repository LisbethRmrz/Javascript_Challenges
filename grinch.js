// El Grinch est√° abriendo las cartas que iban a Santa Claus y las est√° dejando hechas un l√≠o. üò±

// Las cartas son una cadena de texto que incluyen regalos y par√©ntesis ().

// Para saber si una carta es v√°lida ‚úÖ, debes comprobar que los par√©ntesis cierran correctamente y que, adem√°s, no vayan vac√≠os.

// ¬°Pero ojo! Porque el Grinch ha dejado llaves { y corchetes [ dentro de los par√©ntesis que hacen que no sean v√°lidas. Por suerte s√≥lo los ha dejado en medio de los par√©ntesis...

// Ejemplos:

// "bici coche (bal√≥n) bici coche peluche" // -> ‚úÖ
// "(mu√±eca) consola bici" // ‚úÖ

// "bici coche (bal√≥n bici coche" // -> ‚ùå
// "peluche (bici [coche) bici coche bal√≥n" // -> ‚ùå
// "(peluche {) bici" // -> ‚ùå
// "() bici" // ‚ùå
      
// Crea una funci√≥n que pas√°ndole el texto de la carta, devuelva true si es v√°lida y false si no lo es. ¬°Y acaba con la travesura del Grinch!

function isValid(letter) {
    let verify = false;
    // console.log(letter);
    let arrayLetter = letter.split(" ");
    // console.log(arrayLetter);
    // arrayLetter.forEach(getSymbols);

    // function getSymbols(item, index){
    //     if(item.startsWith("(") && item.endsWith(")")){
    //         // arrayLetter.splice(index, 1, `${item})`);
    //         console.log(`${item} cumple`);
    //         verify = true;
    //     }
    // }

    for(let i = 0 ; i < arrayLetter.length ; i++) {
        if(arrayLetter[i].startsWith("(") && !arrayLetter[i].endsWith(")") ){
            // console.log("sigue");
            // console.log(arrayLetter[i]);
            console.log(arrayLetter[i]);
        }
        else{
            verify = true;
            console.log(arrayLetter[i]);
        }
    }
    
    console.log(arrayLetter);
    console.log(verify);
    return verify
}

const letter = "bici (coche (bal√≥n) b[ici coche";
isValid(letter);